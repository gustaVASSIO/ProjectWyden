// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Server.Context;

#nullable disable

namespace Server.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230510195240_FirstMigration")]
    partial class FirstMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("CourseDicipline", b =>
                {
                    b.Property<int>("CoursesCourseId")
                        .HasColumnType("int");

                    b.Property<int>("DiciplinesDiciplineId")
                        .HasColumnType("int");

                    b.HasKey("CoursesCourseId", "DiciplinesDiciplineId");

                    b.HasIndex("DiciplinesDiciplineId");

                    b.ToTable("CourseDicipline");
                });

            modelBuilder.Entity("Server.Models.Entities.Course", b =>
                {
                    b.Property<int>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.HasKey("CourseId");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("Server.Models.Entities.Dicipline", b =>
                {
                    b.Property<int>("DiciplineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Name")
                        .HasMaxLength(60)
                        .HasColumnType("varchar(60)");

                    b.HasKey("DiciplineId");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("Diciplines");
                });

            modelBuilder.Entity("Server.Models.Entities.Professor", b =>
                {
                    b.Property<int>("ProfessorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AR")
                        .HasMaxLength(12)
                        .HasColumnType("varchar(12)");

                    b.Property<int>("DiciplineId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(60)
                        .HasColumnType("varchar(60)");

                    b.HasKey("ProfessorId");

                    b.HasIndex("AR")
                        .IsUnique();

                    b.HasIndex("DiciplineId");

                    b.ToTable("Professors");
                });

            modelBuilder.Entity("Server.Models.Entities.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AR")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("varchar(12)");

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("varchar(60)");

                    b.HasKey("StudentId");

                    b.HasIndex("AR")
                        .IsUnique();

                    b.HasIndex("CourseId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("Server.Models.Entities.Test", b =>
                {
                    b.Property<int>("TestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("DiciplineId")
                        .HasColumnType("int");

                    b.Property<int?>("ProfessorId")
                        .HasColumnType("int");

                    b.Property<float?>("Result")
                        .HasColumnType("float");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("TestId");

                    b.HasIndex("DiciplineId");

                    b.HasIndex("ProfessorId");

                    b.HasIndex("StudentId");

                    b.ToTable("Tests");
                });

            modelBuilder.Entity("CourseDicipline", b =>
                {
                    b.HasOne("Server.Models.Entities.Course", null)
                        .WithMany()
                        .HasForeignKey("CoursesCourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Server.Models.Entities.Dicipline", null)
                        .WithMany()
                        .HasForeignKey("DiciplinesDiciplineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Server.Models.Entities.Professor", b =>
                {
                    b.HasOne("Server.Models.Entities.Dicipline", "Dicipline")
                        .WithMany()
                        .HasForeignKey("DiciplineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dicipline");
                });

            modelBuilder.Entity("Server.Models.Entities.Student", b =>
                {
                    b.HasOne("Server.Models.Entities.Course", "Course")
                        .WithMany("Students")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");
                });

            modelBuilder.Entity("Server.Models.Entities.Test", b =>
                {
                    b.HasOne("Server.Models.Entities.Dicipline", "Dicipline")
                        .WithMany()
                        .HasForeignKey("DiciplineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Server.Models.Entities.Professor", null)
                        .WithMany("Tests")
                        .HasForeignKey("ProfessorId");

                    b.HasOne("Server.Models.Entities.Student", "Student")
                        .WithMany("Tests")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dicipline");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("Server.Models.Entities.Course", b =>
                {
                    b.Navigation("Students");
                });

            modelBuilder.Entity("Server.Models.Entities.Professor", b =>
                {
                    b.Navigation("Tests");
                });

            modelBuilder.Entity("Server.Models.Entities.Student", b =>
                {
                    b.Navigation("Tests");
                });
#pragma warning restore 612, 618
        }
    }
}
